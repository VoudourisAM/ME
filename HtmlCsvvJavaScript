<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>GitHub Snake Visualization</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="contributions-container">
    <div id="contributions-grid"></div>
    <canvas id="snake-canvas"></canvas>
  </div>
  <script src="script.js"></script>
</body>
</html>

/* styles.css */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f4f4f4;
}

.contributions-container {
  position: relative;
  width: 80%;
  max-width: 1000px;
}

#contributions-grid {
  display: grid;
  grid-template-columns: repeat(52, 15px);
  gap: 2px;
  margin-bottom: 20px;
}

#contributions-grid div {
  width: 15px;
  height: 15px;
  background-color: #ddd;
  border-radius: 3px;
  transition: background-color 0.3s;
}

#contributions-grid div.active {
  background-color: #4caf50;
}

#snake-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

// script.js

// Generate random contributions
const contributionsGrid = document.getElementById("contributions-grid");
for (let i = 0; i < 365; i++) {
  const cell = document.createElement("div");
  cell.classList.add(Math.random() > 0.7 ? "active" : "");
  contributionsGrid.appendChild(cell);
}

// Snake Animation
const canvas = document.getElementById("snake-canvas");
const ctx = canvas.getContext("2d");
canvas.width = contributionsGrid.offsetWidth;
canvas.height = contributionsGrid.offsetHeight;

let snake = [{ x: 10, y: 10 }];
let direction = { x: 1, y: 0 };

function drawSnake() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = "#4caf50";
  snake.forEach((segment) => {
    ctx.fillRect(segment.x * 15 + 2, segment.y * 15 + 2, 11, 11);
  });
}

function moveSnake() {
  const head = {
    x: snake[0].x + direction.x,
    y: snake[0].y + direction.y,
  };
  snake.unshift(head);
  if (snake.length > 20) {
    snake.pop();
  }

  if (head.x >= 52 || head.x < 0 || head.y >= 7 || head.y < 0) {
    direction = { x: -direction.x, y: -direction.y }; // Reverse direction
  }
}

function animateSnake() {
  moveSnake();
  drawSnake();
  requestAnimationFrame(animateSnake);
}

animateSnake();
